group Python;

program(globals,functions) ::= <<
<functions; separator="\n">
>>

variable(type,name) ::= " "

globalVariable ::= variable

function(modifier,type,name,args,locals,stats) ::= <<
def <name>(<args; separator=", ">):
    <stats>
>>

type_int() ::= "int"

type_char() ::= "char"

type_user_object(name) ::= "<name>"

parameter(type,name) ::= "<name>"

statement(expr) ::= "<expr>"

comment(expr) ::= <<
# <expr>

>>
statementList(locals,stats) ::= <<
    <stats; separator="\n">
>>

// python has a weird FOR, use a WHILE. :)
forLoop(e1,e2,e3,locals,stats) ::= <<
<e1>
while ( <e2> ):
	<stats; separator="\n">
	<e3>
>>

whileLoop(e1,locals,stats) ::=<<
while ( <e1> ):
	<stats; separator="\n">
>>

if(e1,locals,stats) ::=<<
if ( <e1> ):
	<stats; separator="\n">
>>

assign(lhs,rhs) ::= "<lhs> = <rhs>
"

increment(id) ::= "<id> = <id> + 1"

decrement(id) ::= "<id> = <id> - 1"

equals(left,right) ::= "<left> == <right>"

notEqual(left,right) ::= "<left> != <right>"

lessThan(left,right) ::= "<left> \< <right>"

greaterThan(left,right) ::= "<left> > <right>"

lessEquals(left,right) ::= "<left> \<= <right>"

greaterEquals(left,right) ::= "<left> >= <right>"

add(left,right) ::= "<left> + <right>"

subtract(left,right) ::= "<left> - <right>"

multiply(left,right) ::= "<left> * <right>"

divide(left,right) ::= "<left> / <right>"

modulo(left,right) ::= "<left> % <right>"

or(left, right) ::= "<left> || <right>"

and(left, right) ::= "<left> && <right>"

refVar(id) ::= "<id>"


iconst(value) ::= "<value>"
